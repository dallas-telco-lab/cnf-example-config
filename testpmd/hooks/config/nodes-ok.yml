---
# TODO(skramaja): Explore the posibility of increasing the tolerance level of not-ready nodes
# higher to make the update process faster.
# oc patch mcp worker --type=merge -p '{"spec":{"maxUnavailable":2}}'

- name: Check the master nodes managed by MCP are updated and ready
  k8s_info:
    kind: MachineConfigPool
    name: master
  register: mcp_master
  retries: 240
  delay: 10
  until:
    - "'resources' in mcp_master"
    - "mcp_master.resources|length == 1"
    - "'status' in mcp_master.resources[0]"
    - "mcp_master.resources[0].status.readyMachineCount == mcp_master.resources[0].status.machineCount"
    - "mcp_master.resources[0].status.updatedMachineCount == mcp_master.resources[0].status.machineCount"

- name: Check the worker nodes managed by MCP are updated and ready
  k8s_info:
    kind: MachineConfigPool
    name: worker
  register: mcp_worker
  retries: 240
  delay: 10
  until:
    - "'resources' in mcp_worker"
    - "mcp_worker.resources|length == 1"
    - "'status' in mcp_worker.resources[0]"
    - "mcp_worker.resources[0].status.readyMachineCount == mcp_worker.resources[0].status.machineCount"
    - "mcp_worker.resources[0].status.updatedMachineCount == mcp_worker.resources[0].status.machineCount"

# TODO(skramaja): Verify if sriov policy creation also uses MCP update, if not, then below check is required
- name: Check all nodes are in schedulable state
  k8s_info:
    kind: Node
    field_selectors:
      - spec.unschedulable=true
  register: nodes
  retries: 240
  delay: 10
  until: "'resources' in nodes and nodes.resources|length == 0"
  failed_when: "'resources' not in nodes or nodes.resources|length != 0"
